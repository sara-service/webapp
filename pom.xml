<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>bwfdm.sara</groupId>
	<artifactId>SaraServer</artifactId>
	<version>0.4.4</version>
	<packaging>war</packaging>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.7</maven.compiler.source>
		<maven.compiler.target>1.7</maven.compiler.target>
	</properties>

	<!-- buildnumber-maven-plugin needs this, but doesn't bother to document that fact anywhere -->
	<scm><connection>scm:git:</connection></scm>

	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.4</version>
				<executions><execution>
					<phase>validate</phase>
					<goals><goal>create</goal></goals>
				</execution></executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<webResources>
						<webResource>
							<directory>${basedir}/src/main/webapp</directory>
							<filtering>true</filtering>
						</webResource>
					</webResources>
				</configuration>
			</plugin>
		</plugins>
	</build>
	

	<repositories>
        <!-- JitPack package repository to use libraries
             not only from maven repository, but also from GitHub.
             More info: https://jitpack.io/docs/#jitpackio
        -->
        <repository>
            <id>jitpack-repo</id>
            <url>https://jitpack.io</url>
        </repository>
    </repositories>

	<dependencies>
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-client</artifactId>
			<version>2.25</version>
		</dependency>
		<!-- spring framework and spring-boot as main framework -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>4.3.9.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>4.3.21.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>4.3.9.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>1.5.3.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<version>1.5.3.RELEASE</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
			<version>1.5.3.RELEASE</version>
		</dependency>
		<!-- postgresql jdbc connector for development. for deployment,
		     the jar MUST be copied into tomcat's /lib directory. it
		     cannot be built into the WAR because the DataSource in
		     context.xml is created before the WAR is loaded. see also:
		     https://stackoverflow.com/questions/6981564 -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>42.2.25</version>
			<scope>provided</scope>
		</dependency>
		<!-- this JAR also has to be placed in tomcat's /lib directory! -->
		<dependency>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-javamail_1.4_spec</artifactId>
			<version>1.6</version>
			<scope>provided</scope>
		</dependency>
		<!-- SMTP provider for javax.mail. this can just go into the WAR. -->
		<dependency>
			<groupId>org.apache.geronimo.javamail</groupId>
			<artifactId>geronimo-javamail_1.4_provider</artifactId>
			<version>1.6</version>
		</dependency>
		<!-- explicitly declare Jackson version. spring-boot-starter-web
		     pulls in Jackson automatically but the version must match the
		     YAML dataformat version below, which is easier to guarantee
		     with explicitly declared versions. -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.8.8</version>
		</dependency>
		<!-- jackson YAML support for reading choosealicense.com data
		     files -->
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-yaml</artifactId>
			<version>2.8.8</version>
		</dependency>
		<!-- JRuby to run the Licensee Ruby Gem used for license
		     detection -->
		<dependency>
			<groupId>org.jruby</groupId>
			<artifactId>jruby</artifactId>
			<version>9.1.17.0</version>
		</dependency>
		<!-- JGit for accessing git repositories -->
		<dependency>
			<groupId>org.eclipse.jgit</groupId>
			<artifactId>org.eclipse.jgit</artifactId>
			<version>4.8.0.201706111038-r</version>
		</dependency>
		<!-- SWORDv2 Java Client from GitHub
		     Connection works via JitPack (see "repositories" part above)
		     Link: https://github.com/swordapp/JavaClient2.0 -->
		<dependency>
			<groupId>com.github.swordapp</groupId>
			<artifactId>JavaClient2.0</artifactId>
			<version>sword2-client-0.9.3</version>
		</dependency>
	</dependencies>
</project>
